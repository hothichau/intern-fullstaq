#!/bin/bash

# make sure the script fails on error
set -e

# set the PHP executable
PHP=php

#set public status
BLOG_PUBLIC=0

PARAMS=""
while (( "$#" )); do
  case "$1" in
    -p|--php)
      PHP=$2
      shift 2
      ;;
    -bp|--blog_public)
      BLOG_PUBLIC=$2
      shift 2
      ;;
    --) # end argument parsing
      shift
      break
      ;;
    -*|--*=) # unsupported flags
      echo "Error: Unsupported flag $1" >&2
      exit 1
      ;;
    *) # preserve positional arguments
      PARAMS="$PARAMS $1"
      shift
      ;;
  esac
done

# get the build number
BUILD_NUMBER=`printf %04d ${PARAMS}`

# set the relevant paths
BUILD_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
ROOT_PATH="`dirname $BUILD_PATH`"
BUILDS_PATH="${ROOT_PATH}/builds"
DEST_PATH="${BUILDS_PATH}/build-${BUILD_NUMBER}"
PERSISTENT_PATH="${ROOT_PATH}/persistent"
HTTP_PATH="${ROOT_PATH}/current"
WPCLI_PATH="${DEST_PATH}/vendor/bin/wp"

# move new build into place
mkdir -p $BUILDS_PATH
mv $BUILD_PATH $DEST_PATH

# clear cache folder generated by sage
rm -rf ${PERSISTENT_PATH}/uploads/cache

# link the correct folders into wp-content
ln -sfn ${PERSISTENT_PATH}/uploads ${DEST_PATH}/web/app/uploads
ln -sfn ${PERSISTENT_PATH}/languages ${DEST_PATH}/web/app/languages

# linking the new build
ln -sfn ${DEST_PATH}/web ${HTTP_PATH}

# correct PHP version for wp-cli
export WP_CLI_PHP="${PHP}"

# clear cache
cd ${DEST_PATH}
#bash ${WPCLI_PATH} clear-cache

# Flush rewrite rules
bash ${WPCLI_PATH} rewrite flush --skip-plugins=wordfence --quiet

# update public status
if [ $BLOG_PUBLIC == 1 ]; then
  bash ${WPCLI_PATH} option update blog_public 1
else
  bash ${WPCLI_PATH} option update blog_public 0
fi

# active all plugins
bash ${WPCLI_PATH} plugin activate --all

# cleanup the deploy script itself
rm ${DEST_PATH}/"`basename "${BASH_SOURCE[0]}"`"

# remove old versions, keep the last 3 builds
find ${BUILDS_PATH} -mindepth 1 -maxdepth 1 -type d | sort -rn | tail -n+4 | xargs -I % rm -rf "%"
